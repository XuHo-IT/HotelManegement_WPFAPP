// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(HotelManagementContext))]
    partial class HotelManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BussinessObject.BookingDetail", b =>
                {
                    b.Property<int>("BookingReservationID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<decimal?>("ActualPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BookingDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingDetailID"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BookingReservationID", "RoomID");

                    b.ToTable("BookingDetails");

                    b.HasData(
                        new
                        {
                            BookingReservationID = 1,
                            RoomID = 3,
                            ActualPrice = 199.0000m,
                            BookingDetailID = 0,
                            EndDate = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingReservationID = 1,
                            RoomID = 7,
                            ActualPrice = 179.0000m,
                            BookingDetailID = 0,
                            EndDate = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingReservationID = 2,
                            RoomID = 3,
                            ActualPrice = 199.0000m,
                            BookingDetailID = 0,
                            EndDate = new DateTime(2024, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookingReservationID = 2,
                            RoomID = 5,
                            ActualPrice = 219.0000m,
                            BookingDetailID = 0,
                            EndDate = new DateTime(2024, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BussinessObject.BookingReservation", b =>
                {
                    b.Property<int>("BookingReservationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingReservationID"));

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("BookingStatus")
                        .HasColumnType("tinyint");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingReservationID");

                    b.ToTable("BookingReservations");

                    b.HasData(
                        new
                        {
                            BookingReservationID = 1,
                            BookingDate = new DateTime(2023, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookingStatus = (byte)1,
                            CustomerID = 3,
                            TotalPrice = 378.0000m
                        },
                        new
                        {
                            BookingReservationID = 2,
                            BookingDate = new DateTime(2023, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookingStatus = (byte)1,
                            CustomerID = 3,
                            TotalPrice = 1493.0000m
                        });
                });

            modelBuilder.Entity("BussinessObject.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<DateTime?>("CustomerBirthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerFullName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<byte?>("CustomerStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 3,
                            CustomerBirthday = new DateTime(1990, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerFullName = "William Shakespeare",
                            CustomerStatus = (byte)1,
                            EmailAddress = "WilliamShakespeare@FUMiniHotel.org",
                            Password = "123@",
                            Telephone = "0903939393"
                        },
                        new
                        {
                            CustomerID = 5,
                            CustomerBirthday = new DateTime(1991, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerFullName = "Elizabeth Taylor",
                            CustomerStatus = (byte)1,
                            EmailAddress = "ElizabethTaylor@FUMiniHotel.org",
                            Password = "144@",
                            Telephone = "0903939377"
                        },
                        new
                        {
                            CustomerID = 8,
                            CustomerBirthday = new DateTime(1992, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerFullName = "James Cameron",
                            CustomerStatus = (byte)1,
                            EmailAddress = "JamesCameron@FUMiniHotel.org",
                            Password = "443@",
                            Telephone = "0903946582"
                        },
                        new
                        {
                            CustomerID = 9,
                            CustomerBirthday = new DateTime(1991, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerFullName = "Charles Dickens",
                            CustomerStatus = (byte)1,
                            EmailAddress = "CharlesDickens@FUMiniHotel.org",
                            Password = "563@",
                            Telephone = "0903955633"
                        },
                        new
                        {
                            CustomerID = 10,
                            CustomerBirthday = new DateTime(1993, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerFullName = "George Orwell",
                            CustomerStatus = (byte)1,
                            EmailAddress = "GeorgeOrwell@FUMiniHotel.org",
                            Password = "177@",
                            Telephone = "0913933493"
                        },
                        new
                        {
                            CustomerID = 11,
                            CustomerBirthday = new DateTime(1990, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerFullName = "Victoria Beckham",
                            CustomerStatus = (byte)1,
                            EmailAddress = "VictoriaBeckham@FUMiniHotel.org",
                            Password = "654@",
                            Telephone = "0983246773"
                        });
                });

            modelBuilder.Entity("BussinessObject.RoomInformation", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomID"));

                    b.Property<string>("RoomDetailDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("RoomMaxCapacity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RoomPricePerDay")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte?>("RoomStatus")
                        .IsRequired()
                        .HasColumnType("tinyint");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.HasKey("RoomID");

                    b.ToTable("RoomInformation");

                    b.HasData(
                        new
                        {
                            RoomID = 1,
                            RoomDetailDescription = "A basic room with essential amenities, suitable for individual travelers or couples.",
                            RoomMaxCapacity = 3,
                            RoomNumber = "2364",
                            RoomPricePerDay = 149.0000m,
                            RoomStatus = (byte)1,
                            RoomTypeID = 1
                        },
                        new
                        {
                            RoomID = 2,
                            RoomDetailDescription = "Deluxe rooms offer additional features such as a balcony or sea view, upgraded bedding, and improved décor.",
                            RoomMaxCapacity = 5,
                            RoomNumber = "3345",
                            RoomPricePerDay = 299.0000m,
                            RoomStatus = (byte)1,
                            RoomTypeID = 3
                        },
                        new
                        {
                            RoomID = 3,
                            RoomDetailDescription = "A luxurious and spacious room with separate living and sleeping areas, ideal for guests seeking extra comfort and space.",
                            RoomMaxCapacity = 4,
                            RoomNumber = "4432",
                            RoomPricePerDay = 199.0000m,
                            RoomStatus = (byte)1,
                            RoomTypeID = 2
                        },
                        new
                        {
                            RoomID = 5,
                            RoomDetailDescription = "Floor 3, Window in the North West.",
                            RoomMaxCapacity = 5,
                            RoomNumber = "3342",
                            RoomPricePerDay = 219.0000m,
                            RoomStatus = (byte)1,
                            RoomTypeID = 5
                        },
                        new
                        {
                            RoomID = 7,
                            RoomDetailDescription = "Floor 4, main window in the South.",
                            RoomMaxCapacity = 4,
                            RoomNumber = "4434",
                            RoomPricePerDay = 179.0000m,
                            RoomStatus = (byte)1,
                            RoomTypeID = 1
                        });
                });

            modelBuilder.Entity("BussinessObject.RoomType", b =>
                {
                    b.Property<int>("RoomTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeID"));

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TypeDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TypeNote")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoomTypeID");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            RoomTypeID = 1,
                            RoomTypeName = "Standard room",
                            TypeDescription = "This is typically the most affordable option and provides basic amenities such as a bed, dresser, and TV.",
                            TypeNote = "N/A"
                        },
                        new
                        {
                            RoomTypeID = 2,
                            RoomTypeName = "Suite",
                            TypeDescription = "Suites usually offer more space and amenities than standard rooms, such as a separate living area, kitchenette, and multiple bathrooms.",
                            TypeNote = "N/A"
                        },
                        new
                        {
                            RoomTypeID = 3,
                            RoomTypeName = "Deluxe room",
                            TypeDescription = "Deluxe rooms offer additional features such as a balcony or sea view, upgraded bedding, and improved décor.",
                            TypeNote = "N/A"
                        },
                        new
                        {
                            RoomTypeID = 4,
                            RoomTypeName = "Executive room",
                            TypeDescription = "Executive rooms are designed for business travelers and offer perks such as free breakfast, evening drink, and high-speed internet.",
                            TypeNote = "N/A"
                        },
                        new
                        {
                            RoomTypeID = 5,
                            RoomTypeName = "Family Room",
                            TypeDescription = "A room specifically designed to accommodate families, often with multiple beds and additional space for children.",
                            TypeNote = "N/A"
                        },
                        new
                        {
                            RoomTypeID = 6,
                            RoomTypeName = "Connecting Room",
                            TypeDescription = "Two or more rooms with a connecting door, providing flexibility for larger groups or families traveling together.",
                            TypeNote = "N/A"
                        },
                        new
                        {
                            RoomTypeID = 7,
                            RoomTypeName = "Penthouse Suite",
                            TypeDescription = "An extravagant, top-floor suite with exceptional views and exclusive amenities, typically chosen for special occasions or VIP guests.",
                            TypeNote = "N/A"
                        },
                        new
                        {
                            RoomTypeID = 8,
                            RoomTypeName = "Bungalow",
                            TypeDescription = "A standalone cottage-style accommodation, providing privacy and a sense of seclusion often within a resort setting.",
                            TypeNote = "N/A"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
